// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TerminatorGYM.Models;

#nullable disable

namespace TerminatorGYM.Migrations
{
    [DbContext(typeof(TerminatorGymContext))]
    [Migration("20230825062054_addedIdentity")]
    partial class addedIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Modern_Spanish_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TerminatorGYM.Models.Contacto", b =>
                {
                    b.Property<short>("ContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("ContactoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("ContactoId"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<short>("MiembroId")
                        .HasColumnType("smallint")
                        .HasColumnName("MiembroID");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("ContactoId")
                        .HasName("PK_ContactoID");

                    b.HasIndex("MiembroId");

                    b.ToTable("Contacto", (string)null);
                });

            modelBuilder.Entity("TerminatorGYM.Models.Evento", b =>
                {
                    b.Property<short>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("EventoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("EventoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Evento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.HasKey("EventoId")
                        .HasName("PK_EventoID");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("TerminatorGYM.Models.Membresia", b =>
                {
                    b.Property<short>("MembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("MembresiaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("MembresiaId"));

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Inicio");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Vencimiento");

                    b.Property<short>("MiembroId")
                        .HasColumnType("smallint")
                        .HasColumnName("MiembroID");

                    b.Property<decimal>("Precio")
                        .HasColumnType("smallmoney");

                    b.Property<string>("TipoMembresia")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Tipo_Membresia");

                    b.HasKey("MembresiaId")
                        .HasName("PK_MembresiaID");

                    b.HasIndex("MiembroId");

                    b.ToTable("Membresias");
                });

            modelBuilder.Entity("TerminatorGYM.Models.Miembro", b =>
                {
                    b.Property<short>("MiembroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("MiembroID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("MiembroId"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Nacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.HasKey("MiembroId")
                        .HasName("PK_MiembroID");

                    b.ToTable("Miembros");
                });

            modelBuilder.Entity("TerminatorGYM.Models.MiembrosEvento", b =>
                {
                    b.Property<short>("EventoId")
                        .HasColumnType("smallint")
                        .HasColumnName("EventoID");

                    b.Property<short>("MiembroId")
                        .HasColumnType("smallint")
                        .HasColumnName("MiembroID");

                    b.HasIndex("EventoId");

                    b.HasIndex("MiembroId");

                    b.ToTable("Miembros_Eventos", (string)null);
                });

            modelBuilder.Entity("TerminatorGYM.Models.Contacto", b =>
                {
                    b.HasOne("TerminatorGYM.Models.Miembro", "Miembro")
                        .WithMany("Contactos")
                        .HasForeignKey("MiembroId")
                        .IsRequired()
                        .HasConstraintName("FK_Miembros_MiembroID");

                    b.Navigation("Miembro");
                });

            modelBuilder.Entity("TerminatorGYM.Models.Membresia", b =>
                {
                    b.HasOne("TerminatorGYM.Models.Miembro", "Miembro")
                        .WithMany("Membresia")
                        .HasForeignKey("MiembroId")
                        .IsRequired()
                        .HasConstraintName("FK_M_Miembros_MiembroID");

                    b.Navigation("Miembro");
                });

            modelBuilder.Entity("TerminatorGYM.Models.MiembrosEvento", b =>
                {
                    b.HasOne("TerminatorGYM.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .IsRequired()
                        .HasConstraintName("FK_ME_Eventos_EventoID");

                    b.HasOne("TerminatorGYM.Models.Miembro", "Miembro")
                        .WithMany()
                        .HasForeignKey("MiembroId")
                        .IsRequired()
                        .HasConstraintName("FK_ME_Miembros_MiembroID");

                    b.Navigation("Evento");

                    b.Navigation("Miembro");
                });

            modelBuilder.Entity("TerminatorGYM.Models.Miembro", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("Membresia");
                });
#pragma warning restore 612, 618
        }
    }
}
